x = 1
y = 4

def doe1():
    global x
    y = 7
    x = 0
    return y

def doe2():
    x = doe1()
    x += 1
    return x

x = doe1()
print(x)

Antwoord is C) 7, want ten eerst hij doet niks met functie doe2, ten tweede hoewel hij in doe1 de globale x naar 0 verandert
dat maakt niks uit want de functie returned y wat 7 is en die word aan x gegeven waardoor het antwoord 7 is

a = 5

def fun1():
    global a
    b = 2
    a = 4
    return a+b

def fun2(y):
    global a
    a = y + fun1()
    a += 1
    return a

print("a:", a, end = ' ')
a = fun2(3)
print("a:", a)

antwoord is D): a: 5 a: 10, want eerst print hij gewoon de globale a uit, wat 5 is, vervolgens word de functie uitgevoerd
en die verandert a naar 10

x = 1
y = 3

def doe1():
    global x
    y = 4
    x = 0
    return x+y

def doe2():
    x = doe1()
    x += 2
    return x

doe2()
print(x)

Antwoord is A): 0, want de return value van doe2 word aan niks gekoppeld waardoor x, die in doe1 naar 0 is verandert,
gewoon 0 blijft

def doe1():
    y = 7
    x = 0
    return y

def doe2():
    global x
    x = doe1()
    x += 1

doe2()
print(x)

Antwoord is D): 8, want op het moment dat doe2 wordt uitgevoerd, word er een globale x gemaakt waardoor de print(x)
8 uitprint nadat doe2 is uitgevoerd